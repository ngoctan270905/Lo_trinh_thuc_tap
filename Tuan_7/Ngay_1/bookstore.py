import tkinter as tk
from tkinter import messagebox, font, ttk

# D·ªØ li·ªáu s√°ch
books = [
    {"ten": "ƒê·∫Øc Nh√¢n T√¢m", "gia": 75000, "ton_kho": 20, "ban_duoc": 15},
    {"ten": "D√°m Nghƒ© L·ªõn", "gia": 45000, "ton_kho": 5, "ban_duoc": 8},
    {"ten": "7 Th√≥i Quen", "gia": 120000, "ton_kho": 2, "ban_duoc": 11},
    {"ten": "T∆∞ Duy Nhanh v√† Ch·∫≠m", "gia": 99000, "ton_kho": 0, "ban_duoc": 14},
    {"ten": "Sapiens", "gia": 150000, "ton_kho": 3, "ban_duoc": 20}
]

# H√†m ki·ªÉm tra t·ªìn kho v√† ph√¢n lo·∫°i
def check_stock_gui():
    ten_sach = entry_ten_sach.get()
    try:
        so_luong = int(entry_so_luong.get())
    except ValueError:
        messagebox.showerror("L·ªói", "S·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë nguy√™n.")
        return

    for book in books:
        if book["ten"] == ten_sach:
            if book["ton_kho"] >= so_luong:
                trang_thai = "‚úÖ C√≤n h√†ng"
            else:
                trang_thai = "‚ùå H·∫øt h√†ng ho·∫∑c kh√¥ng ƒë·ªß"

            if book["gia"] < 50000:
                phan_loai = "S√°ch gi√° r·∫ª"
            elif book["gia"] <= 100000:
                phan_loai = "S√°ch trung b√¨nh"
            else:
                phan_loai = "S√°ch cao c·∫•p"

            messagebox.showinfo("Ki·ªÉm tra t·ªìn kho", f"{trang_thai}\nPh√¢n lo·∫°i: {phan_loai}")
            return
    messagebox.showwarning("Kh√¥ng t√¨m th·∫•y", "Kh√¥ng t√¨m th·∫•y s√°ch.")

# H√†m t√≠nh h√≥a ƒë∆°n
def calculate_bill_gui():
    ten_sach = entry_ten_sach.get()
    try:
        so_luong = int(entry_so_luong.get())
    except ValueError:
        messagebox.showerror("L·ªói", "S·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë nguy√™n.")
        return

    loai = var_loai_khach.get()
    for book in books:
        if book["ten"] == ten_sach:
            if book["ton_kho"] == 0:
                messagebox.showerror("H·∫øt h√†ng", "S√°ch ƒë√£ h·∫øt h√†ng.")
                return
            tong = book["gia"] * so_luong
            if loai == "VIP":
                tong *= 0.9
            messagebox.showinfo("H√≥a ƒë∆°n", f"T·ªïng ti·ªÅn: {tong:.0f} VND")
            return
    messagebox.showerror("Kh√¥ng t√¨m th·∫•y", "Kh√¥ng t√¨m th·∫•y s√°ch.")

# H√†m t·∫°o m√£ gi·∫£m gi√°
def tao_ma_giam_gia_gui():
    ten = entry_ten_khach.get()
    loai = var_loai_khach.get()
    ma = ten.upper() + ("_VIP" if loai == "VIP" else "_REG")
    messagebox.showinfo("M√£ gi·∫£m gi√°", f"M√£ gi·∫£m gi√°: {ma}")

# In s√°ch b√°n ch·∫°y
def sach_ban_chay_gui():
    danh_sach = [book["ten"] for book in books if book["ban_duoc"] > 10]
    if danh_sach:
        messagebox.showinfo("S√°ch b√°n ch·∫°y", "\n".join(danh_sach))
    else:
        messagebox.showinfo("S√°ch b√°n ch·∫°y", "Kh√¥ng c√≥ s√°ch n√†o b√°n > 10.")

# T√¨m s√°ch b√°n ch·∫°y nh·∫•t
def top_sach_gui():
    i = 1
    max_index = 0
    while i < len(books):
        if books[i]["ban_duoc"] > books[max_index]["ban_duoc"]:
            max_index = i
        i += 1
    book = books[max_index]
    messagebox.showinfo("S√°ch b√°n ch·∫°y nh·∫•t", f"{book['ten']}: {book['ban_duoc']} b·∫£n")

# ==== GIAO DI·ªÜN ====
root = tk.Tk()
root.title("üìö Qu·∫£n L√Ω C·ª≠a H√†ng S√°ch")
root.geometry("500x700")
root.resizable(False, False)

# Font ƒë·∫πp
app_font = ("Segoe UI", 11)
label_font = ("Segoe UI", 10, "bold")

# Widgets nh·∫≠p li·ªáu
tk.Label(root, text="T√™n s√°ch:", font=label_font).pack(anchor="w", padx=20, pady=(15, 0))
entry_ten_sach = tk.Entry(root, font=app_font)
entry_ten_sach.pack(fill="x", padx=20)

tk.Label(root, text="S·ªë l∆∞·ª£ng mua:", font=label_font).pack(anchor="w", padx=20, pady=(10, 0))
entry_so_luong = tk.Entry(root, font=app_font)
entry_so_luong.pack(fill="x", padx=20)

tk.Label(root, text="T√™n kh√°ch h√†ng:", font=label_font).pack(anchor="w", padx=20, pady=(10, 0))
entry_ten_khach = tk.Entry(root, font=app_font)
entry_ten_khach.pack(fill="x", padx=20)

tk.Label(root, text="Lo·∫°i kh√°ch h√†ng:", font=label_font).pack(anchor="w", padx=20, pady=(10, 0))
var_loai_khach = tk.StringVar(value="Th∆∞·ªùng")
tk.OptionMenu(root, var_loai_khach, "Th∆∞·ªùng", "VIP").pack(fill="x", padx=20)

# N√∫t ch·ª©c nƒÉng
btn_opts = {"font": app_font, "padx": 10, "pady": 5, "width": 25}
tk.Button(root, text="1. Ki·ªÉm tra t·ªìn kho", command=check_stock_gui, **btn_opts).pack(pady=4)
tk.Button(root, text="2. T√≠nh h√≥a ƒë∆°n", command=calculate_bill_gui, **btn_opts).pack(pady=4)
tk.Button(root, text="3. T·∫°o m√£ gi·∫£m gi√°", command=tao_ma_giam_gia_gui, **btn_opts).pack(pady=4)
tk.Button(root, text="4. Danh s√°ch b√°n ch·∫°y", command=sach_ban_chay_gui, **btn_opts).pack(pady=4)
tk.Button(root, text="5. S√°ch b√°n ch·∫°y nh·∫•t", command=top_sach_gui, **btn_opts).pack(pady=4)

# ====== B·∫¢NG HI·ªÇN TH·ªä DANH S√ÅCH S√ÅCH ======
tk.Label(root, text="Danh s√°ch s√°ch trong c·ª≠a h√†ng:", font=label_font).pack(anchor="w", padx=20, pady=(10, 0))
tree_books = ttk.Treeview(root, columns=("ten", "gia", "ton_kho", "ban_duoc"), show="headings", height=6)
tree_books.heading("ten", text="T√™n s√°ch")
tree_books.heading("gia", text="Gi√° (VND)")
tree_books.heading("ton_kho", text="T·ªìn kho")
tree_books.heading("ban_duoc", text="ƒê√£ b√°n")
tree_books.pack(fill="x", padx=20, pady=10)

def refresh_book_list():
    for row in tree_books.get_children():
        tree_books.delete(row)
    for book in books:
        tree_books.insert("", "end", values=(book["ten"], f"{book['gia']:,}", book["ton_kho"], book["ban_duoc"]))

refresh_book_list()

# Kh·ªüi ch·∫°y
root.mainloop()
